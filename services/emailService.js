const nodemailer = require("nodemailer");

const transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});




async function sendVerificationEmail(email, verificationToken) {

  let frontendUrl = process.env.FRONTEND_URL;

  if (frontendUrl.endsWith("/")) {
    frontendUrl = frontendUrl.slice(0, -1);
  }

  console.log("FRONTEND_URL:", process.env.FRONTEND_URL);
  console.log("Link gerado:", verificationUrl);

  const verificationUrl = `${frontendUrl}/verify/${verificationToken}`;

  try {
    await transporter.sendMail({
      from: '"StreamHub" <no-reply@streamhub.com>',
      to: email,
      subject: "ğŸ”’ AtivaÃ§Ã£o de Conta - StreamHub",
      text: `OlÃ¡! ğŸ‘‹\n\nPara concluir seu cadastro, clique no link de ativaÃ§Ã£o abaixo:\n\n${verificationUrl}\n\nO link expira em 1 hora.`,
      html: `
        <h2 style="color: #3b82f6;">OlÃ¡, Bem-vindo ao StreamHub! ğŸ‘‹</h2>
        <p style="font-size: 18px;">Para concluir seu cadastro, clique no link de ativaÃ§Ã£o abaixo:</p>
        <a href="${verificationUrl}" style="font-size: 18px; color: #22c55e; text-decoration: none; font-weight: bold;">Ativar Conta</a>
        <p style="font-size: 16px; color: #666;">Este link expira em 1 hora. Se vocÃª nÃ£o solicitou a ativaÃ§Ã£o, por favor, ignore este e-mail.</p>
      `,
    });
    console.log("E-mail enviado para:", email);
  } catch (error) {
    console.error("Erro ao enviar e-mail:", error);
    throw new Error("Erro ao enviar e-mail");
  }
}

async function sendResetPasswordEmail(email) {
  try {s
    const resetCode = Math.floor(100000 + Math.random() * 900000);

    await transporter.sendMail({
      from: '"StreamHub" <no-reply@streamhub.com>',
      to: email,
      subject: "ğŸ”’ CÃ³digo de RedefiniÃ§Ã£o de Senha - StreamHub",
      text: `OlÃ¡, tudo bem? ğŸ‘‹\n\nVocÃª solicitou a redefiniÃ§Ã£o de sua senha.\n\nSeu cÃ³digo de verificaÃ§Ã£o Ã©: ${resetCode}\n\nSe vocÃª nÃ£o solicitou essa redefiniÃ§Ã£o, ignore este e-mail.`,
      html: `
        <h2 style="color: #3b82f6;">OlÃ¡, tudo bem? ğŸ‘‹</h2>
        <p style="font-size: 18px;">VocÃª solicitou a redefiniÃ§Ã£o de sua senha.</p>
        <p style="font-size: 18px; font-weight: bold; color: #22c55e;">Seu cÃ³digo de verificaÃ§Ã£o: ${resetCode}</p>
        <p style="font-size: 16px; color: #666;">Se vocÃª nÃ£o solicitou essa redefiniÃ§Ã£o, ignore este e-mail.</p>
        <hr style="border-top: 2px solid #e5e7eb;" />
        <p style="font-size: 14px; color: #888;">Este cÃ³digo Ã© vÃ¡lido por um tempo limitado.</p>
      `,
    });

    console.log("E-mail de redefiniÃ§Ã£o de senha enviado para:", email);
    return resetCode;
  } catch (error) {
    console.error("Erro ao enviar e-mail:", error);
    throw new Error("Erro ao enviar e-mail");
  }
}

module.exports = {
  sendVerificationEmail,
  sendResetPasswordEmail,
};
